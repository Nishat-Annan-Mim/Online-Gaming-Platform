Server.Js

const express = require('express');
const mongoose = require('mongoose');
const cors = require('cors');
const achievementRoutes = require('./routes/achievements');

const app = express();
app.use(cors());
app.use(express.json());

mongoose.connect('mongodb://localhost:27017/game-platform', {
  useNewUrlParser: true,
  useUnifiedTopology: true,
}).then(() => console.log('MongoDB connected'))
  .catch((err) => console.error(err));

app.use('/api/achievements', achievementRoutes);

const PORT = process.env.PORT || 5000;
app.listen(PORT, () => console.log(`Server running on port ${PORT}`));

models/Acheievement.js


const mongoose = require('mongoose');

const achievementSchema = new mongoose.Schema({
  userId: { type: String, required: true },
  title: { type: String, required: true },
  description: String,
  achievedOn: { type: Date, default: Date.now }
});

module.exports = mongoose.model('Achievement', achievementSchema);

routes/achievements.js

const express = require('express');
const router = express.Router();
const Achievement = require('../models/Achievement');

// Create a new achievement
router.post('/', async (req, res) => {
  try {
    const achievement = new Achievement(req.body);
    await achievement.save();
    res.status(201).json(achievement);
  } catch (err) {
    res.status(400).json({ message: err.message });
  }
});

// Get achievements by userId
router.get('/:userId', async (req, res) => {
  try {
    const achievements = await Achievement.find({ userId: req.params.userId });
    res.json(achievements);
  } catch (err) {
    res.status(500).json({ message: err.message });
  }
});

module.exports = router;




